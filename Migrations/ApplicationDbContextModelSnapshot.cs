// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantMVC.Data;

#nullable disable

namespace RestaurantMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantMVC.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("RestaurantMVC.Models.Ban", b =>
                {
                    b.Property<int>("MaBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBan"));

                    b.Property<string>("KhuVuc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SucChua")
                        .HasColumnType("int");

                    b.Property<string>("TenBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBan");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("RestaurantMVC.Models.ChiTietOrder", b =>
                {
                    b.Property<int>("MaOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaMon")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaOrder", "MaMon");

                    b.HasIndex("MaMon");

                    b.ToTable("ChiTietOrders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<int>("MaOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGio")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaOrder")
                        .IsUnique();

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("RestaurantMVC.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("RestaurantMVC.Models.MonAn", b =>
                {
                    b.Property<int>("MaMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMon"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Loai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMon");

                    b.ToTable("MonAns");
                });

            modelBuilder.Entity("RestaurantMVC.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("RestaurantMVC.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNV"));

                    b.Property<string>("ChucVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhauBam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("RestaurantMVC.Models.Order", b =>
                {
                    b.Property<int>("MaOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaOrder"));

                    b.Property<bool>("DaCoc")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KhachHangMaKH")
                        .HasColumnType("int");

                    b.Property<int>("MaBan")
                        .HasColumnType("int");

                    b.Property<int?>("NhanVienMaNV")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoTienCoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaOrder");

                    b.HasIndex("KhachHangMaKH");

                    b.HasIndex("MaBan");

                    b.HasIndex("NhanVienMaNV");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.ChiTietOrder", b =>
                {
                    b.HasOne("RestaurantMVC.Models.MonAn", "MonAn")
                        .WithMany("ChiTietOrders")
                        .HasForeignKey("MaMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantMVC.Models.Order", "Order")
                        .WithMany("ChiTietOrders")
                        .HasForeignKey("MaOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAn");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantMVC.Models.HoaDon", b =>
                {
                    b.HasOne("RestaurantMVC.Models.Order", "Order")
                        .WithOne("HoaDon")
                        .HasForeignKey("RestaurantMVC.Models.HoaDon", "MaOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantMVC.Models.Order", b =>
                {
                    b.HasOne("RestaurantMVC.Models.KhachHang", null)
                        .WithMany("Orders")
                        .HasForeignKey("KhachHangMaKH");

                    b.HasOne("RestaurantMVC.Models.Ban", "Ban")
                        .WithMany("Orders")
                        .HasForeignKey("MaBan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantMVC.Models.NhanVien", null)
                        .WithMany("Orders")
                        .HasForeignKey("NhanVienMaNV");

                    b.Navigation("Ban");
                });

            modelBuilder.Entity("RestaurantMVC.Models.Ban", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.KhachHang", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.MonAn", b =>
                {
                    b.Navigation("ChiTietOrders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.NhanVien", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantMVC.Models.Order", b =>
                {
                    b.Navigation("ChiTietOrders");

                    b.Navigation("HoaDon")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
